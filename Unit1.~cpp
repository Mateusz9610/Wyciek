//---------------------------------------------------------------------------

#include <vcl.h>
#include <vector>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
using namespace std;

TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
        : TForm(Owner)
{
    x=0;
}
#define PredkoscOtoczenia 10


class CFabrykaPasow
{
    private:
        vector<TImage*> pasy;
        TShape* tlo;
        TImage* pas1;
        TImage* wsk;
    public:
        CFabrykaPasow () {}
        void UstanowRelacje (TShape* tloo) { tlo= tloo; }
        void ProdukujPas () {
                pas1=new TImage(Form1);
                pas1->Parent=Form1;
                pas1->Picture->LoadFromFile("img/pasy.bmp");
                pas1->Left=((tlo->Width/2)-10); pas1->Top=-50;
                pasy.push_back(pas1);}
        void UsunPas () {
                wsk=pasy.front();
                pasy.erase(pasy.begin());
                delete wsk;}
        void RuchPasow() {
                for(int i=0;i<pasy.size();++i)
                {
                        pasy[i]->Top+=PredkoscOtoczenia;
                }}
        void SprawdzCzyProdukcja () {
                if(pasy.back()->Top>=pasy.front()->Height)
                {
                CFabrykaPasow::ProdukujPas();
                }}
        void SprawdzCzyUsun () {
                if (pasy.front()->Top>=tlo->Height/1.2)
                {
                CFabrykaPasow::UsunPas ();
                }}
};
CFabrykaPasow PAS;

//---------------------------------------------------------------------------
void __fastcall TForm1::TimerOtoczenieTimer(TObject *Sender)
{
    //PAS.UstanowRelacje(tlo);
    if (x<1)
    {
    PAS.ProdukujPas();
    ++x;
    }
    PAS.RuchPasow();
    PAS.SprawdzCzyProdukcja();
    PAS.SprawdzCzyUsun();
    /*for(int i=0; i<pasy.size(); ++i)
    {
    pasy[i]->Top+=PredkoscOtoczenia;
    }*/
    //pas->Top+=PredkoscOtoczenia;

}
//---------------------------------------------------------------------------
